From VM Tue Jul 11 10:11:50 2000
Content-Length: 5885
Status: RO
X-VM-v5-Data: ([nil nil nil nil nil nil nil nil nil]
	[nil "Tue" "11" "July" "2000" "06:07:48" "+0100" "Hamid Bolouri" "hbolouri@caltech.edu" "<396AABA4.CD01538B@caltech.edu>" "140" "XML stuff" "^From:" nil nil "7" "2000071105:07:48" "XML stuff" nil nil nil]
	nil)
Return-Path: <hbolouri@caltech.edu>
Delivered-To: mhucka@corruscant.bbb.caltech.edu
Received: from gateway.bbb.caltech.edu (gateway.bbb.caltech.edu [131.215.137.1])
	by corruscant.bbb.caltech.edu (Postfix) with ESMTP id B9D574EE50
	for <mhucka@corruscant.bbb.caltech.edu>; Mon, 10 Jul 2000 21:54:38 -0700 (PDT)
Received: from chamber.cco.caltech.edu ([131.215.48.55])
	by gateway.bbb.caltech.edu with esmtp (Exim 2.05 #2)
	id 13Brju-0002JQ-00
	for mhucka@bbb.caltech.edu; Mon, 10 Jul 2000 21:33:46 -0700
Received: from cool.cds.caltech.edu (cool.cds.caltech.edu [131.215.142.1])
	by chamber.cco.caltech.edu (8.9.3/8.9.3) with ESMTP id VAA22802
	for <mhucka@caltech.edu>; Mon, 10 Jul 2000 21:54:52 -0700 (PDT)
Received: from gateway.bbb.caltech.edu (gateway.bbb.caltech.edu [131.215.25.161])
	by cool.cds.caltech.edu (8.9.1/8.9.1) with ESMTP id VAA26310
	for <mhucka@cds.caltech.edu>; Mon, 10 Jul 2000 21:57:58 -0700 (PDT)
Received: from corruscant.bbb.caltech.edu ([131.215.137.5])
	by gateway.bbb.caltech.edu with esmtp (Exim 2.05 #2)
	id 13Brjr-0002JO-00
	for mhucka@cds.caltech.edu; Mon, 10 Jul 2000 21:33:43 -0700
Received: from caltech.edu (hamid-pc.bbb.caltech.edu [131.215.137.32])
	by corruscant.bbb.caltech.edu (Postfix) with ESMTP id 1FFD94EE50
	for <mhucka@cds.caltech.edu>; Mon, 10 Jul 2000 21:54:35 -0700 (PDT)
Message-ID: <396AABA4.CD01538B@caltech.edu>
Organization: California Institute of Technology
X-Mailer: Mozilla 4.7 [en] (WinNT; I)
X-Accept-Language: en
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
From: Hamid Bolouri <hbolouri@caltech.edu>
To: mhucka@cds.caltech.edu
Subject: XML stuff
Date: Tue, 11 Jul 2000 06:07:48 +0100

Mike;

Here is what I have so far. Please edit as you see fit
and recirlculate.

Thanks

HAMiD

------- 

TITLE: an XML-based model description language for molecular biology
simulations
Date:...

AUTHORS

This document is based on discussions with the authors of BioSpice
(Arkin), DBSolve (Goryanin), ECell (Tomita, Nakayama, Takahashi), GEPASI
(Mendez),  StochSim (Bray, Firth & Shimizu), and Virtual Cell (Loew &
Schaff). It is written by Herbert Sauro, Mike Hucka, Andrew Finney and
Hamid Bolouri of the Kitano ERATO Systems Biology Group, Control &
Dynamical Systems, California Institute of Technology. Emails ...


\section{INTRODUCTION}

This document presents a first pass specification of a potential,
common, XML-based model-description language for molecular biology
simulators. The specification was arrived at by merging together the
most obvious modeling-language features of BioSpice, ECell, GEPASI,
DBSolve, StochSim, and Virtual Cell.

The primary purpose of this document is to serve as the basis for
discussions and further development of a more comprehensive language
specification. The final outcome of this process will be an XML Schema
(or DTD) which can be used to translate model descriptions between
simulation packages. Because XML Schema and DTD's are difficult to read
and absorb by human readers (for an example see Appendix XXX), a minimal
subset of UML (REFXXX) is used to describe the proposed data structures.
A brief guide to the notation is given in HTTP://XXXX. For the sake of
clarity, please use this notation when contributing to the specification
discussions. To facilitate discussions, a web/FTP site and a group
mailing list have been set up for the seven participating groups. Please
see (HTTP address XXX) for details.


\section}LANGUAGE OVRVIEW

The language specifies four distinct categories of information. Not all
of these categories, or their subcomponents, will be needed by any one
simulator. Rather, the specification is intended to encompass the range
of data structures needed across all 6 simulators \footnote{Thus an
empty field in a data structure will not be the same as a zero value in
that field.}.

The division of data structures into four categories, the names of the
structures, and the manner of specifying relations between them are
fairly arbitrary and open to discussion. The current selection is
intended to be parsimonious and unambiguous.

In the following sections, we first present an English-language
description of the proposed data structures, then present a more exact
UML definition.  

\section{Language components}

\subsection{TOPOLOGICAL STRUCTURES}
This category defines physical groupings of model components without
geometric (morphological) detail. A "compartment" - as used in several
simulators - would be an example of a Topological Structure. Topological
Structures are hierarchically defined and may change size during
simulation. The leaf elements of a Topologcal Structure tree comprise
all the component "compartments" of a model and have Geometry, Species,
and Reactions attributes as described below. The following is a list of
the main features of Topological Structures:

\begin{itemize}
\item ***etc***
     name
     dimensionality: structures can be 1D, 2D, or 3D. Examples are: 1D =
DNA stretch, 2D = disks in photoreceptors; patch of membrane, 3D = cell
nucleus; dendritic spine
     size: length/surface/volume
     surface-to-volume ratio
     growth rate
     portals for transport (eg: receptors, ion channels, pumps): portals
are doors, locations; their functionality is specified by
reactions/species) 
       	portal attributes:
		name
	 	source-or-destination
	 	direction
  leaf structures have attributes:
     species
     reactions
     geometry

\end{itemize}


\subsection{GEOMETRY}
The "Geometry" data structure is intended to provide a means of
specifying the morphology of simulation "compartments" (Topological
Structures) in appropriate format and detail. A Geometry comprises a
name and a boundary specification, either as an algebraic function or as
{(x,y,z)} coordinates in a global frame, (eg for disk: $x^2 + y^2 <=
r^2$, or {(x,y,z)}).


\subsection{SPECIES}
Species comprise all entities which take part in reactions. These
include simple ions (e.g. protons, calcium etc), simple molecules (e.g.
glucose, ATP etc), large molecules (e.g. RNA, polysaccharides, and
proteins). Species are divided into "Simple", "Multistate, and "DNA
Region" according to the types of reactions they take part in. Simple
and Multistate Species are self-explanatory. Although Multistate Species
could in principle be defined as multiple SimpleSpecies, they are
defined separately because to accommodate StochSim's method of simlating
multistate receptors. 

"DNA Region" species are currently employed in a simple way in ECell,
and more comprehensively in BioSpice for models of transcriptional
control. The definition here is essentially that used in BioSpice. A DNA
Region is composed of Binding and Non Binding regions. Binding regions
are then divided into various functional types such as Regulatory,
Promoter, Coding (GENE), Terminator and AntiTerminator regions. Each of
these subregions is given a set of attributes specific to its role in
transcription.

\subsection{REACTIONS}
Reactions are defined by matrices representing the names and
stoichiomteries of the reactants and products, and by parameter values
for separately defined parameterized rate laws. Three type of reactions
are defined: Simple, Multistate, and DNA Region. Multistate reactions
are defind separately in order to allow dynamically variable reaction
rates and transport between Topological Structures. DNA Region reactions
are different from the other two reaction types to allow different
levels of abstraction in modeling transcriptional control (e.g.
stochastic and logical interactions).
